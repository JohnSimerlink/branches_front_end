Problem 1: 
* Classroom learning does not take into account the facts people already know.


Feature 1: people can create facts and add them to a global list. Every fact is hashed and given a unique id, such that if someone else creates that same fact and adds it to the global list, it already exists on the global list.


feature 2: people can organize facts into trees
        E.g. a course is a tree - a course is a collection of facts in a hierarchical manner.
        E.g. american history might be a collection of 2000 facts, laid out in a tree format.


        Two types of trees
                -organizational trees
                -dependency trees 
                        




Feature 3:
        Review schedule algorithm


Feature 6: Chrome extension for articles


* Will user know before reading an article what facts they are going to need to learn?
* How will a user’s attention be called to broad trends in subjects like history or math?


* Yes ^
* When article pops up it could say “here are the 50 facts you are going to learn. [shows a list]. You already know these 25 [highlights the ones in the list]
Phase 3:


Feature 4 : skills




Feature 5: prioritization via upvote/downvote system


Feature 7: API so that other developers can create courses and hook up the progress users are making on facts and skills to our global knowledge/skill tree




Feature 8: Employers could search for people with certain skills or knowledge sets, as tracked by our users’ individual knowledge trees.


Feature 9: subscribe to new facts that are discovered via research, for a specific topic/domain.








Vue.js and firebase.


John draw wireframe and spec sheet for the feature. Then Shaffan critique/edit wireframe/specs. Then the feature gets assigned to either shaffan or John. Then after feature is coded, the other developer does a code review, and merges into master.






Timeline
* Jun 13th - John give git access to Shaffan
*